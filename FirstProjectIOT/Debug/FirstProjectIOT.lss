
FirstProjectIOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000512  00000586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000512  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000618  00000000  00000000  00000588  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c93  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001833  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001844  2**2
                  CONTENTS, READONLY
  6 .debug_info   00000bbc  00000000  00000000  00001884  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b1a  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  00002f5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e6  00000000  00000000  00002f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	0b c2       	rjmp	.+1046   	; 0x50e <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:

#include<avr/io.h>
#include<util/delay.h>

int main()
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	6c 97       	sbiw	r28, 0x1c	; 28
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	f8 94       	cli
 108:	de bf       	out	0x3e, r29	; 62
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	cd bf       	out	0x3d, r28	; 61
	DDRC|=(1<<0);
 10e:	87 e2       	ldi	r24, 0x27	; 39
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	27 e2       	ldi	r18, 0x27	; 39
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	f9 01       	movw	r30, r18
 118:	20 81       	ld	r18, Z
 11a:	21 60       	ori	r18, 0x01	; 1
 11c:	fc 01       	movw	r30, r24
 11e:	20 83       	st	Z, r18
	while(1)
	{
		PORTC|=(1<<0);
 120:	88 e2       	ldi	r24, 0x28	; 40
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	28 e2       	ldi	r18, 0x28	; 40
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	f9 01       	movw	r30, r18
 12a:	20 81       	ld	r18, Z
 12c:	21 60       	ori	r18, 0x01	; 1
 12e:	fc 01       	movw	r30, r24
 130:	20 83       	st	Z, r18
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	a8 ec       	ldi	r26, 0xC8	; 200
 138:	b2 e4       	ldi	r27, 0x42	; 66
 13a:	89 83       	std	Y+1, r24	; 0x01
 13c:	9a 83       	std	Y+2, r25	; 0x02
 13e:	ab 83       	std	Y+3, r26	; 0x03
 140:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 142:	20 e0       	ldi	r18, 0x00	; 0
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	4a e7       	ldi	r20, 0x7A	; 122
 148:	55 e4       	ldi	r21, 0x45	; 69
 14a:	69 81       	ldd	r22, Y+1	; 0x01
 14c:	7a 81       	ldd	r23, Y+2	; 0x02
 14e:	8b 81       	ldd	r24, Y+3	; 0x03
 150:	9c 81       	ldd	r25, Y+4	; 0x04
 152:	52 d1       	rcall	.+676    	; 0x3f8 <__mulsf3>
 154:	dc 01       	movw	r26, r24
 156:	cb 01       	movw	r24, r22
 158:	8d 83       	std	Y+5, r24	; 0x05
 15a:	9e 83       	std	Y+6, r25	; 0x06
 15c:	af 83       	std	Y+7, r26	; 0x07
 15e:	b8 87       	std	Y+8, r27	; 0x08
 160:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	40 e8       	ldi	r20, 0x80	; 128
 166:	5f e3       	ldi	r21, 0x3F	; 63
 168:	6d 81       	ldd	r22, Y+5	; 0x05
 16a:	7e 81       	ldd	r23, Y+6	; 0x06
 16c:	8f 81       	ldd	r24, Y+7	; 0x07
 16e:	98 85       	ldd	r25, Y+8	; 0x08
 170:	c2 d0       	rcall	.+388    	; 0x2f6 <__cmpsf2>
 172:	88 23       	and	r24, r24
 174:	2c f4       	brge	.+10     	; 0x180 <main+0x86>
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
		__ticks = 1;
 17a:	9a 87       	std	Y+10, r25	; 0x0a
 17c:	89 87       	std	Y+9, r24	; 0x09
 17e:	3b c0       	rjmp	.+118    	; 0x1f6 <main+0xfc>
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	3f ef       	ldi	r19, 0xFF	; 255
	else if (__tmp > 65535)
 184:	4f e7       	ldi	r20, 0x7F	; 127
 186:	57 e4       	ldi	r21, 0x47	; 71
 188:	6d 81       	ldd	r22, Y+5	; 0x05
 18a:	7e 81       	ldd	r23, Y+6	; 0x06
 18c:	8f 81       	ldd	r24, Y+7	; 0x07
 18e:	98 85       	ldd	r25, Y+8	; 0x08
 190:	2f d1       	rcall	.+606    	; 0x3f0 <__gesf2>
 192:	18 16       	cp	r1, r24
 194:	3c f5       	brge	.+78     	; 0x1e4 <main+0xea>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e2       	ldi	r20, 0x20	; 32
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 19c:	51 e4       	ldi	r21, 0x41	; 65
 19e:	69 81       	ldd	r22, Y+1	; 0x01
 1a0:	7a 81       	ldd	r23, Y+2	; 0x02
 1a2:	8b 81       	ldd	r24, Y+3	; 0x03
 1a4:	9c 81       	ldd	r25, Y+4	; 0x04
 1a6:	28 d1       	rcall	.+592    	; 0x3f8 <__mulsf3>
 1a8:	dc 01       	movw	r26, r24
 1aa:	cb 01       	movw	r24, r22
 1ac:	bc 01       	movw	r22, r24
 1ae:	cd 01       	movw	r24, r26
 1b0:	a6 d0       	rcall	.+332    	; 0x2fe <__fixunssfsi>
 1b2:	dc 01       	movw	r26, r24
 1b4:	cb 01       	movw	r24, r22
 1b6:	9a 87       	std	Y+10, r25	; 0x0a
 1b8:	89 87       	std	Y+9, r24	; 0x09
 1ba:	0f c0       	rjmp	.+30     	; 0x1da <main+0xe0>
 1bc:	80 e9       	ldi	r24, 0x90	; 144
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	9c 87       	std	Y+12, r25	; 0x0c
 1c2:	8b 87       	std	Y+11, r24	; 0x0b
 1c4:	8b 85       	ldd	r24, Y+11	; 0x0b
 1c6:	9c 85       	ldd	r25, Y+12	; 0x0c
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <main+0xce>
 1cc:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1ce:	8b 87       	std	Y+11, r24	; 0x0b
 1d0:	89 85       	ldd	r24, Y+9	; 0x09
 1d2:	9a 85       	ldd	r25, Y+10	; 0x0a
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	9a 87       	std	Y+10, r25	; 0x0a
 1d8:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1da:	89 85       	ldd	r24, Y+9	; 0x09
 1dc:	9a 85       	ldd	r25, Y+10	; 0x0a
 1de:	89 2b       	or	r24, r25
 1e0:	69 f7       	brne	.-38     	; 0x1bc <main+0xc2>
 1e2:	13 c0       	rjmp	.+38     	; 0x20a <main+0x110>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1e4:	6d 81       	ldd	r22, Y+5	; 0x05
 1e6:	7e 81       	ldd	r23, Y+6	; 0x06
 1e8:	8f 81       	ldd	r24, Y+7	; 0x07
 1ea:	98 85       	ldd	r25, Y+8	; 0x08
 1ec:	88 d0       	rcall	.+272    	; 0x2fe <__fixunssfsi>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1ee:	dc 01       	movw	r26, r24
 1f0:	cb 01       	movw	r24, r22
 1f2:	9a 87       	std	Y+10, r25	; 0x0a
 1f4:	89 87       	std	Y+9, r24	; 0x09
 1f6:	89 85       	ldd	r24, Y+9	; 0x09
 1f8:	9a 85       	ldd	r25, Y+10	; 0x0a
 1fa:	9e 87       	std	Y+14, r25	; 0x0e
 1fc:	8d 87       	std	Y+13, r24	; 0x0d
 1fe:	8d 85       	ldd	r24, Y+13	; 0x0d
 200:	9e 85       	ldd	r25, Y+14	; 0x0e
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <main+0x108>
 206:	9e 87       	std	Y+14, r25	; 0x0e
 208:	8d 87       	std	Y+13, r24	; 0x0d
 20a:	88 e2       	ldi	r24, 0x28	; 40
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	28 e2       	ldi	r18, 0x28	; 40
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	f9 01       	movw	r30, r18
 214:	20 81       	ld	r18, Z
		_delay_ms(100);
		PORTC&=~(1<<0);
 216:	2e 7f       	andi	r18, 0xFE	; 254
 218:	fc 01       	movw	r30, r24
 21a:	20 83       	st	Z, r18
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	a8 ec       	ldi	r26, 0xC8	; 200
 222:	b2 e4       	ldi	r27, 0x42	; 66
 224:	8f 87       	std	Y+15, r24	; 0x0f
 226:	98 8b       	std	Y+16, r25	; 0x10
 228:	a9 8b       	std	Y+17, r26	; 0x11
 22a:	ba 8b       	std	Y+18, r27	; 0x12
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	4a e7       	ldi	r20, 0x7A	; 122
 232:	55 e4       	ldi	r21, 0x45	; 69
 234:	6f 85       	ldd	r22, Y+15	; 0x0f
 236:	78 89       	ldd	r23, Y+16	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 238:	89 89       	ldd	r24, Y+17	; 0x11
 23a:	9a 89       	ldd	r25, Y+18	; 0x12
 23c:	dd d0       	rcall	.+442    	; 0x3f8 <__mulsf3>
 23e:	dc 01       	movw	r26, r24
 240:	cb 01       	movw	r24, r22
 242:	8b 8b       	std	Y+19, r24	; 0x13
 244:	9c 8b       	std	Y+20, r25	; 0x14
 246:	ad 8b       	std	Y+21, r26	; 0x15
 248:	be 8b       	std	Y+22, r27	; 0x16
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 e8       	ldi	r20, 0x80	; 128
 250:	5f e3       	ldi	r21, 0x3F	; 63
 252:	6b 89       	ldd	r22, Y+19	; 0x13
 254:	7c 89       	ldd	r23, Y+20	; 0x14
 256:	8d 89       	ldd	r24, Y+21	; 0x15
	if (__tmp < 1.0)
 258:	9e 89       	ldd	r25, Y+22	; 0x16
 25a:	4d d0       	rcall	.+154    	; 0x2f6 <__cmpsf2>
 25c:	88 23       	and	r24, r24
 25e:	2c f4       	brge	.+10     	; 0x26a <main+0x170>
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	98 8f       	std	Y+24, r25	; 0x18
 266:	8f 8b       	std	Y+23, r24	; 0x17
 268:	3b c0       	rjmp	.+118    	; 0x2e0 <main+0x1e6>
 26a:	20 e0       	ldi	r18, 0x00	; 0
 26c:	3f ef       	ldi	r19, 0xFF	; 255
 26e:	4f e7       	ldi	r20, 0x7F	; 127
		__ticks = 1;
 270:	57 e4       	ldi	r21, 0x47	; 71
 272:	6b 89       	ldd	r22, Y+19	; 0x13
 274:	7c 89       	ldd	r23, Y+20	; 0x14
 276:	8d 89       	ldd	r24, Y+21	; 0x15
 278:	9e 89       	ldd	r25, Y+22	; 0x16
	else if (__tmp > 65535)
 27a:	ba d0       	rcall	.+372    	; 0x3f0 <__gesf2>
 27c:	18 16       	cp	r1, r24
 27e:	3c f5       	brge	.+78     	; 0x2ce <main+0x1d4>
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	40 e2       	ldi	r20, 0x20	; 32
 286:	51 e4       	ldi	r21, 0x41	; 65
 288:	6f 85       	ldd	r22, Y+15	; 0x0f
 28a:	78 89       	ldd	r23, Y+16	; 0x10
 28c:	89 89       	ldd	r24, Y+17	; 0x11
 28e:	9a 89       	ldd	r25, Y+18	; 0x12
 290:	b3 d0       	rcall	.+358    	; 0x3f8 <__mulsf3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 292:	dc 01       	movw	r26, r24
 294:	cb 01       	movw	r24, r22
 296:	bc 01       	movw	r22, r24
 298:	cd 01       	movw	r24, r26
 29a:	31 d0       	rcall	.+98     	; 0x2fe <__fixunssfsi>
 29c:	dc 01       	movw	r26, r24
 29e:	cb 01       	movw	r24, r22
 2a0:	98 8f       	std	Y+24, r25	; 0x18
 2a2:	8f 8b       	std	Y+23, r24	; 0x17
 2a4:	0f c0       	rjmp	.+30     	; 0x2c4 <main+0x1ca>
 2a6:	80 e9       	ldi	r24, 0x90	; 144
 2a8:	91 e0       	ldi	r25, 0x01	; 1
 2aa:	9a 8f       	std	Y+26, r25	; 0x1a
 2ac:	89 8f       	std	Y+25, r24	; 0x19
 2ae:	89 8d       	ldd	r24, Y+25	; 0x19
 2b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <main+0x1b8>
 2b6:	9a 8f       	std	Y+26, r25	; 0x1a
 2b8:	89 8f       	std	Y+25, r24	; 0x19
 2ba:	8f 89       	ldd	r24, Y+23	; 0x17
 2bc:	98 8d       	ldd	r25, Y+24	; 0x18
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	98 8f       	std	Y+24, r25	; 0x18
 2c2:	8f 8b       	std	Y+23, r24	; 0x17
 2c4:	8f 89       	ldd	r24, Y+23	; 0x17
 2c6:	98 8d       	ldd	r25, Y+24	; 0x18
 2c8:	89 2b       	or	r24, r25
 2ca:	69 f7       	brne	.-38     	; 0x2a6 <main+0x1ac>
 2cc:	13 c0       	rjmp	.+38     	; 0x2f4 <main+0x1fa>
 2ce:	6b 89       	ldd	r22, Y+19	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2d0:	7c 89       	ldd	r23, Y+20	; 0x14
 2d2:	8d 89       	ldd	r24, Y+21	; 0x15
 2d4:	9e 89       	ldd	r25, Y+22	; 0x16
 2d6:	13 d0       	rcall	.+38     	; 0x2fe <__fixunssfsi>
 2d8:	dc 01       	movw	r26, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2da:	cb 01       	movw	r24, r22
 2dc:	98 8f       	std	Y+24, r25	; 0x18
 2de:	8f 8b       	std	Y+23, r24	; 0x17
 2e0:	8f 89       	ldd	r24, Y+23	; 0x17
 2e2:	98 8d       	ldd	r25, Y+24	; 0x18
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2e4:	9c 8f       	std	Y+28, r25	; 0x1c
 2e6:	8b 8f       	std	Y+27, r24	; 0x1b
 2e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
 2ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0x1f2>
 2f0:	9c 8f       	std	Y+28, r25	; 0x1c
 2f2:	8b 8f       	std	Y+27, r24	; 0x1b
 2f4:	15 cf       	rjmp	.-470    	; 0x120 <main+0x26>

000002f6 <__cmpsf2>:
 2f6:	2f d0       	rcall	.+94     	; 0x356 <__fp_cmp>
 2f8:	08 f4       	brcc	.+2      	; 0x2fc <__cmpsf2+0x6>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	08 95       	ret

000002fe <__fixunssfsi>:
 2fe:	57 d0       	rcall	.+174    	; 0x3ae <__fp_splitA>
 300:	88 f0       	brcs	.+34     	; 0x324 <__fixunssfsi+0x26>
 302:	9f 57       	subi	r25, 0x7F	; 127
 304:	90 f0       	brcs	.+36     	; 0x32a <__fixunssfsi+0x2c>
 306:	b9 2f       	mov	r27, r25
 308:	99 27       	eor	r25, r25
 30a:	b7 51       	subi	r27, 0x17	; 23
		_delay_ms(100);
	}
 30c:	a0 f0       	brcs	.+40     	; 0x336 <__fixunssfsi+0x38>
 30e:	d1 f0       	breq	.+52     	; 0x344 <__fixunssfsi+0x46>
 310:	66 0f       	add	r22, r22
 312:	77 1f       	adc	r23, r23
 314:	88 1f       	adc	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	1a f0       	brmi	.+6      	; 0x320 <__fixunssfsi+0x22>
 31a:	ba 95       	dec	r27
 31c:	c9 f7       	brne	.-14     	; 0x310 <__fixunssfsi+0x12>
 31e:	12 c0       	rjmp	.+36     	; 0x344 <__fixunssfsi+0x46>
 320:	b1 30       	cpi	r27, 0x01	; 1
 322:	81 f0       	breq	.+32     	; 0x344 <__fixunssfsi+0x46>
 324:	5e d0       	rcall	.+188    	; 0x3e2 <__fp_zero>
 326:	b1 e0       	ldi	r27, 0x01	; 1
 328:	08 95       	ret
 32a:	5b c0       	rjmp	.+182    	; 0x3e2 <__fp_zero>
 32c:	67 2f       	mov	r22, r23
 32e:	78 2f       	mov	r23, r24
 330:	88 27       	eor	r24, r24
 332:	b8 5f       	subi	r27, 0xF8	; 248
 334:	39 f0       	breq	.+14     	; 0x344 <__fixunssfsi+0x46>
 336:	b9 3f       	cpi	r27, 0xF9	; 249
 338:	cc f3       	brlt	.-14     	; 0x32c <__fixunssfsi+0x2e>
 33a:	86 95       	lsr	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b3 95       	inc	r27
 342:	d9 f7       	brne	.-10     	; 0x33a <__fixunssfsi+0x3c>
 344:	3e f4       	brtc	.+14     	; 0x354 <__fixunssfsi+0x56>
 346:	90 95       	com	r25
 348:	80 95       	com	r24
 34a:	70 95       	com	r23
 34c:	61 95       	neg	r22
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	08 95       	ret

00000356 <__fp_cmp>:
 356:	99 0f       	add	r25, r25
 358:	00 08       	sbc	r0, r0
 35a:	55 0f       	add	r21, r21
 35c:	aa 0b       	sbc	r26, r26
 35e:	e0 e8       	ldi	r30, 0x80	; 128
 360:	fe ef       	ldi	r31, 0xFE	; 254
 362:	16 16       	cp	r1, r22
 364:	17 06       	cpc	r1, r23
 366:	e8 07       	cpc	r30, r24
 368:	f9 07       	cpc	r31, r25
 36a:	c0 f0       	brcs	.+48     	; 0x39c <__fp_cmp+0x46>
 36c:	12 16       	cp	r1, r18
 36e:	13 06       	cpc	r1, r19
 370:	e4 07       	cpc	r30, r20
 372:	f5 07       	cpc	r31, r21
 374:	98 f0       	brcs	.+38     	; 0x39c <__fp_cmp+0x46>
 376:	62 1b       	sub	r22, r18
 378:	73 0b       	sbc	r23, r19
 37a:	84 0b       	sbc	r24, r20
 37c:	95 0b       	sbc	r25, r21
 37e:	39 f4       	brne	.+14     	; 0x38e <__fp_cmp+0x38>
 380:	0a 26       	eor	r0, r26
 382:	61 f0       	breq	.+24     	; 0x39c <__fp_cmp+0x46>
 384:	23 2b       	or	r18, r19
 386:	24 2b       	or	r18, r20
 388:	25 2b       	or	r18, r21
 38a:	21 f4       	brne	.+8      	; 0x394 <__fp_cmp+0x3e>
 38c:	08 95       	ret
 38e:	0a 26       	eor	r0, r26
 390:	09 f4       	brne	.+2      	; 0x394 <__fp_cmp+0x3e>
 392:	a1 40       	sbci	r26, 0x01	; 1
 394:	a6 95       	lsr	r26
 396:	8f ef       	ldi	r24, 0xFF	; 255
 398:	81 1d       	adc	r24, r1
 39a:	81 1d       	adc	r24, r1
 39c:	08 95       	ret

0000039e <__fp_split3>:
 39e:	57 fd       	sbrc	r21, 7
 3a0:	90 58       	subi	r25, 0x80	; 128
 3a2:	44 0f       	add	r20, r20
 3a4:	55 1f       	adc	r21, r21
 3a6:	59 f0       	breq	.+22     	; 0x3be <__fp_splitA+0x10>
 3a8:	5f 3f       	cpi	r21, 0xFF	; 255
 3aa:	71 f0       	breq	.+28     	; 0x3c8 <__fp_splitA+0x1a>
 3ac:	47 95       	ror	r20

000003ae <__fp_splitA>:
 3ae:	88 0f       	add	r24, r24
 3b0:	97 fb       	bst	r25, 7
 3b2:	99 1f       	adc	r25, r25
 3b4:	61 f0       	breq	.+24     	; 0x3ce <__fp_splitA+0x20>
 3b6:	9f 3f       	cpi	r25, 0xFF	; 255
 3b8:	79 f0       	breq	.+30     	; 0x3d8 <__fp_splitA+0x2a>
 3ba:	87 95       	ror	r24
 3bc:	08 95       	ret
 3be:	12 16       	cp	r1, r18
 3c0:	13 06       	cpc	r1, r19
 3c2:	14 06       	cpc	r1, r20
 3c4:	55 1f       	adc	r21, r21
 3c6:	f2 cf       	rjmp	.-28     	; 0x3ac <__fp_split3+0xe>
 3c8:	46 95       	lsr	r20
 3ca:	f1 df       	rcall	.-30     	; 0x3ae <__fp_splitA>
 3cc:	08 c0       	rjmp	.+16     	; 0x3de <__fp_splitA+0x30>
 3ce:	16 16       	cp	r1, r22
 3d0:	17 06       	cpc	r1, r23
 3d2:	18 06       	cpc	r1, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	f1 cf       	rjmp	.-30     	; 0x3ba <__fp_splitA+0xc>
 3d8:	86 95       	lsr	r24
 3da:	71 05       	cpc	r23, r1
 3dc:	61 05       	cpc	r22, r1
 3de:	08 94       	sec
 3e0:	08 95       	ret

000003e2 <__fp_zero>:
 3e2:	e8 94       	clt

000003e4 <__fp_szero>:
 3e4:	bb 27       	eor	r27, r27
 3e6:	66 27       	eor	r22, r22
 3e8:	77 27       	eor	r23, r23
 3ea:	cb 01       	movw	r24, r22
 3ec:	97 f9       	bld	r25, 7
 3ee:	08 95       	ret

000003f0 <__gesf2>:
 3f0:	b2 df       	rcall	.-156    	; 0x356 <__fp_cmp>
 3f2:	08 f4       	brcc	.+2      	; 0x3f6 <__gesf2+0x6>
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	08 95       	ret

000003f8 <__mulsf3>:
 3f8:	0b d0       	rcall	.+22     	; 0x410 <__mulsf3x>
 3fa:	78 c0       	rjmp	.+240    	; 0x4ec <__fp_round>
 3fc:	69 d0       	rcall	.+210    	; 0x4d0 <__fp_pscA>
 3fe:	28 f0       	brcs	.+10     	; 0x40a <__mulsf3+0x12>
 400:	6e d0       	rcall	.+220    	; 0x4de <__fp_pscB>
 402:	18 f0       	brcs	.+6      	; 0x40a <__mulsf3+0x12>
 404:	95 23       	and	r25, r21
 406:	09 f0       	breq	.+2      	; 0x40a <__mulsf3+0x12>
 408:	5a c0       	rjmp	.+180    	; 0x4be <__fp_inf>
 40a:	5f c0       	rjmp	.+190    	; 0x4ca <__fp_nan>
 40c:	11 24       	eor	r1, r1
 40e:	ea cf       	rjmp	.-44     	; 0x3e4 <__fp_szero>

00000410 <__mulsf3x>:
 410:	c6 df       	rcall	.-116    	; 0x39e <__fp_split3>
 412:	a0 f3       	brcs	.-24     	; 0x3fc <__mulsf3+0x4>

00000414 <__mulsf3_pse>:
 414:	95 9f       	mul	r25, r21
 416:	d1 f3       	breq	.-12     	; 0x40c <__mulsf3+0x14>
 418:	95 0f       	add	r25, r21
 41a:	50 e0       	ldi	r21, 0x00	; 0
 41c:	55 1f       	adc	r21, r21
 41e:	62 9f       	mul	r22, r18
 420:	f0 01       	movw	r30, r0
 422:	72 9f       	mul	r23, r18
 424:	bb 27       	eor	r27, r27
 426:	f0 0d       	add	r31, r0
 428:	b1 1d       	adc	r27, r1
 42a:	63 9f       	mul	r22, r19
 42c:	aa 27       	eor	r26, r26
 42e:	f0 0d       	add	r31, r0
 430:	b1 1d       	adc	r27, r1
 432:	aa 1f       	adc	r26, r26
 434:	64 9f       	mul	r22, r20
 436:	66 27       	eor	r22, r22
 438:	b0 0d       	add	r27, r0
 43a:	a1 1d       	adc	r26, r1
 43c:	66 1f       	adc	r22, r22
 43e:	82 9f       	mul	r24, r18
 440:	22 27       	eor	r18, r18
 442:	b0 0d       	add	r27, r0
 444:	a1 1d       	adc	r26, r1
 446:	62 1f       	adc	r22, r18
 448:	73 9f       	mul	r23, r19
 44a:	b0 0d       	add	r27, r0
 44c:	a1 1d       	adc	r26, r1
 44e:	62 1f       	adc	r22, r18
 450:	83 9f       	mul	r24, r19
 452:	a0 0d       	add	r26, r0
 454:	61 1d       	adc	r22, r1
 456:	22 1f       	adc	r18, r18
 458:	74 9f       	mul	r23, r20
 45a:	33 27       	eor	r19, r19
 45c:	a0 0d       	add	r26, r0
 45e:	61 1d       	adc	r22, r1
 460:	23 1f       	adc	r18, r19
 462:	84 9f       	mul	r24, r20
 464:	60 0d       	add	r22, r0
 466:	21 1d       	adc	r18, r1
 468:	82 2f       	mov	r24, r18
 46a:	76 2f       	mov	r23, r22
 46c:	6a 2f       	mov	r22, r26
 46e:	11 24       	eor	r1, r1
 470:	9f 57       	subi	r25, 0x7F	; 127
 472:	50 40       	sbci	r21, 0x00	; 0
 474:	8a f0       	brmi	.+34     	; 0x498 <__mulsf3_pse+0x84>
 476:	e1 f0       	breq	.+56     	; 0x4b0 <__mulsf3_pse+0x9c>
 478:	88 23       	and	r24, r24
 47a:	4a f0       	brmi	.+18     	; 0x48e <__mulsf3_pse+0x7a>
 47c:	ee 0f       	add	r30, r30
 47e:	ff 1f       	adc	r31, r31
 480:	bb 1f       	adc	r27, r27
 482:	66 1f       	adc	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	91 50       	subi	r25, 0x01	; 1
 48a:	50 40       	sbci	r21, 0x00	; 0
 48c:	a9 f7       	brne	.-22     	; 0x478 <__mulsf3_pse+0x64>
 48e:	9e 3f       	cpi	r25, 0xFE	; 254
 490:	51 05       	cpc	r21, r1
 492:	70 f0       	brcs	.+28     	; 0x4b0 <__mulsf3_pse+0x9c>
 494:	14 c0       	rjmp	.+40     	; 0x4be <__fp_inf>
 496:	a6 cf       	rjmp	.-180    	; 0x3e4 <__fp_szero>
 498:	5f 3f       	cpi	r21, 0xFF	; 255
 49a:	ec f3       	brlt	.-6      	; 0x496 <__mulsf3_pse+0x82>
 49c:	98 3e       	cpi	r25, 0xE8	; 232
 49e:	dc f3       	brlt	.-10     	; 0x496 <__mulsf3_pse+0x82>
 4a0:	86 95       	lsr	r24
 4a2:	77 95       	ror	r23
 4a4:	67 95       	ror	r22
 4a6:	b7 95       	ror	r27
 4a8:	f7 95       	ror	r31
 4aa:	e7 95       	ror	r30
 4ac:	9f 5f       	subi	r25, 0xFF	; 255
 4ae:	c1 f7       	brne	.-16     	; 0x4a0 <__mulsf3_pse+0x8c>
 4b0:	fe 2b       	or	r31, r30
 4b2:	88 0f       	add	r24, r24
 4b4:	91 1d       	adc	r25, r1
 4b6:	96 95       	lsr	r25
 4b8:	87 95       	ror	r24
 4ba:	97 f9       	bld	r25, 7
 4bc:	08 95       	ret

000004be <__fp_inf>:
 4be:	97 f9       	bld	r25, 7
 4c0:	9f 67       	ori	r25, 0x7F	; 127
 4c2:	80 e8       	ldi	r24, 0x80	; 128
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	60 e0       	ldi	r22, 0x00	; 0
 4c8:	08 95       	ret

000004ca <__fp_nan>:
 4ca:	9f ef       	ldi	r25, 0xFF	; 255
 4cc:	80 ec       	ldi	r24, 0xC0	; 192
 4ce:	08 95       	ret

000004d0 <__fp_pscA>:
 4d0:	00 24       	eor	r0, r0
 4d2:	0a 94       	dec	r0
 4d4:	16 16       	cp	r1, r22
 4d6:	17 06       	cpc	r1, r23
 4d8:	18 06       	cpc	r1, r24
 4da:	09 06       	cpc	r0, r25
 4dc:	08 95       	ret

000004de <__fp_pscB>:
 4de:	00 24       	eor	r0, r0
 4e0:	0a 94       	dec	r0
 4e2:	12 16       	cp	r1, r18
 4e4:	13 06       	cpc	r1, r19
 4e6:	14 06       	cpc	r1, r20
 4e8:	05 06       	cpc	r0, r21
 4ea:	08 95       	ret

000004ec <__fp_round>:
 4ec:	09 2e       	mov	r0, r25
 4ee:	03 94       	inc	r0
 4f0:	00 0c       	add	r0, r0
 4f2:	11 f4       	brne	.+4      	; 0x4f8 <__fp_round+0xc>
 4f4:	88 23       	and	r24, r24
 4f6:	52 f0       	brmi	.+20     	; 0x50c <__fp_round+0x20>
 4f8:	bb 0f       	add	r27, r27
 4fa:	40 f4       	brcc	.+16     	; 0x50c <__fp_round+0x20>
 4fc:	bf 2b       	or	r27, r31
 4fe:	11 f4       	brne	.+4      	; 0x504 <__fp_round+0x18>
 500:	60 ff       	sbrs	r22, 0
 502:	04 c0       	rjmp	.+8      	; 0x50c <__fp_round+0x20>
 504:	6f 5f       	subi	r22, 0xFF	; 255
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	8f 4f       	sbci	r24, 0xFF	; 255
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	08 95       	ret

0000050e <_exit>:
 50e:	f8 94       	cli

00000510 <__stop_program>:
 510:	ff cf       	rjmp	.-2      	; 0x510 <__stop_program>
